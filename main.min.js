var height=16;var width=30;var maxBombs=99;var boardArray;var leftMouse=false;var rightMouse=false;var playing;var paused;var time;var difficulty=2;var score;var seconds=document.getElementById("seconds");setInterval(myTimer,1000);document.getElementById("newGame").addEventListener("mousedown",function(e){document.getElementById("newGame").style.backgroundPosition="-28px -40px";});document.getElementById("newGame").addEventListener("mouseup",function(e){newGame();});document.getElementById("custDiffBtn").onclick=custSize;var gameBoard=document.getElementById("gameBoard");gameBoard.oncontextmenu=function(){return false;};window.addEventListener("load",newGame,false);var longtouch=false;var touchStart;gameBoard.ontouchstart=function(e){longtouch=false;touchStart=setTimeout(function(){if("vibrate"in navigator){navigator.vibrate=navigator.vibrate||navigator.webkitVibrate||navigator.mozVibrate||navigator.msVibrate;if(navigator.vibrate){navigator.vibrate([15,15,15]);}}
rightMouseClick(e);longtouch=true;},500)}
gameBoard.ontouchend=function(e){if(!longtouch){clearTimeout(touchStart);var clickX=parseInt(e.target.getAttribute("x"));var clickY=parseInt(e.target.getAttribute("y"));if(boardArray[clickY][clickX].isRevealed){doubleClick(e);}else{expandClick(e);}}
longtouch=false;return false;};gameBoard.addEventListener("mousedown",function(e){if(e.which==1){leftMouse=true;}
else if(e.which==3){if(!leftMouse){rightMouseClick(e);}rightMouse=true;}
if(playing){document.getElementById("newGame").style.backgroundPosition="-56px -40px";}
showpress(e);});gameBoard.addEventListener("mouseup",function(e){unpressTiles();if(leftMouse&&rightMouse){leftMouse=false;rightMouse=false;doubleClick(e);}
else if(leftMouse){expandClick(e);leftMouse=false;}
else if(rightMouse){rightMouse=false;}
if(playing){document.getElementById("newGame").style.backgroundPosition="0px -40px";}});function Tile(x,y){this.X=x;this.Y=y;this.bombCount=0;this.isBomb=false;this.isRevealed=false;this.isFlagged=false;this.isGuessed=false;}
function newGame(){$('#custDiff').collapse('hide');getScores();playing=true;paused=true;seconds.innerHTML=time=0;score=maxBombs;makeBoard();displayBoard();var board=document.getElementById("gameBoard");board.onmouseleave=unpressTiles;board.style.width=width*18+'px';document.getElementById("gameHeader").style.width=(width*18)+6+'px';document.getElementById("newGame").style.backgroundPosition="0px -40px";document.getElementById("wholeGame").style.width=(width*18)+6+'px';}
function makeBoard(){boardArray=new Array(height);for(var y=0;y<height;y++)
{boardArray[y]=new Array(width);for(var x=0;x<width;x++)
{boardArray[y][x]=new Tile(x,y);}}}
function addBombs(startX,startY){var bombs=0;do
{var y=Math.floor(Math.random()*height);var x=Math.floor(Math.random()*width);var t=boardArray[y][x];if(t.isBomb){continue;}
if((startX-x===0)&&(startY-y===0)){continue;}
t.isBomb=true;bombs++;exploreNearbyTiles(countBombs,x,y);}while(bombs<maxBombs);}
function displayBoard(){document.getElementById("score").innerHTML=score;var board=document.getElementById('gameBoard');var boardBuilder=[];var winCondition=0;var h=boardArray.length;for(var y=0;y<h;y++)
{var w=boardArray[y].length;for(var x=0;x<w;x++)
{var tile=boardArray[y][x];var state="";if(tile.isRevealed)
{state="show"+tile.bombCount;winCondition++;}
else if(tile.isGuessed)
state="guess";else if(tile.isFlagged)
state="flag";boardBuilder.push('<div class="tile '+state+'" x="'+x+'" y="'+y+'""></div>');}}
board.innerHTML=boardBuilder.join("");var tiles=document.getElementsByClassName("tile");for(var i=0;i<tiles.length;i++)
{tiles[i].onmousemove=showpress;}
if(winCondition==(width*height)-maxBombs)
winGame();}
function custSize(){var h=document.getElementById("height");var w=document.getElementById("width");var m=document.getElementById("mines");height=h.value=(h.value===""||h.value<1)?1:parseInt(h.value);width=w.value=(w.value===""||w.value<9)?9:parseInt(w.value);if(m.value>(h.value)*(w.value)-1)
m.value=(h.value)*(w.value)-1;maxBombs=m.value=(m.value===""||m.value<1)?1:parseInt(m.value);difficulty=3;newGame();}
function expandClick(e){var clickX=parseInt(e.target.getAttribute("x"));var clickY=parseInt(e.target.getAttribute("y"));if(isNaN(clickX||clickY))return;if(!playing)return;if(paused){addBombs(clickX,clickY);paused=false;}
var t=boardArray[clickY][clickX];if(t.isRevealed)return;if(t.isFlagged)return;if(t.isBomb)
{gameOver(clickX,clickY);return;}
findBombs(clickX,clickY);displayBoard();}
function rightMouseClick(event){var clickX=parseInt(event.target.getAttribute("x"));var clickY=parseInt(event.target.getAttribute("y"));if(isNaN(clickX||clickY))return;if(!playing)return;if(paused){addBombs(clickX,clickY);paused=false;}
var here=boardArray[clickY][clickX];if(here.isRevealed)return;if(here.isGuessed)
{here.isGuessed=false;here.isFlagged=false;}
else if(here.isFlagged)
{here.isGuessed=true;here.isFlagged=false;score++;}
else
{here.isFlagged=true;here.isGuessed=false;score--;}
displayBoard();return;}
function doubleClick(e){var x=parseInt(e.target.getAttribute("x"));var y=parseInt(e.target.getAttribute("y"));var t=boardArray[y][x];if(!t.isRevealed)return;var flags=0;flags=exploreNearbyTiles(countFlags,x,y);if(flags!=t.bombCount)return;if(!exploreNearbyTiles(cleanTiles,x,y)){displayBoard();}
else{multiDead(x,y);}}
function showpress(event){if(!playing)return;unpressTiles();var e=event.target;var x=parseInt(e.getAttribute("x"));var y=parseInt(e.getAttribute("y"));var b=boardArray[y][x];if(leftMouse&&rightMouse){if(b.isGuessed&&!b.isRevealed){e.classList.add("guessPress");}
else if(!b.isRevealed){e.classList.add("pressed");}
exploreNearbyTiles(pressSquare,x,y);}
else if(leftMouse&&!b.isRevealed){if(b.isGuessed){e.classList.add("guessPress");}
else{e.classList.add("pressed");}}
/*else if(rightMouse&&!b.isRevealed){e.classList.add("flagPress");}*/}
function unpressTiles(){var pressed=document.getElementsByClassName("tile");for(var i=0;i<pressed.length;i++){pressed[i].classList.remove("pressed");pressed[i].classList.remove("flagPress");pressed[i].classList.remove("guessPress");}}
function pressSquare(x,y){var cc=gameBoard.querySelector('[x="'+x+'"][y="'+y+'"]');var t=boardArray[y][x];if(t.isRevealed)return;if(t.isGuessed){cc.classList.add("guessPress");}
else{cc.classList.add("pressed");}}
function exploreNearbyTiles(func,Xaxis,Yaxis){var result=0;for(var x=Xaxis-1;x<=Xaxis+1;x++){for(var y=Yaxis-1;y<=Yaxis+1;y++){if(x==Xaxis&&y==Yaxis){continue;}
if(x<0||y<0||x>=width||y>=height){continue;}
result+=func(x,y);}}
return result;}
function countBombs(x,y){boardArray[y][x].bombCount++;}
function findBombs(x,y){var t=boardArray[y][x];if(t.isBomb)return;if(t.isRevealed)return;if(t.isFlagged)return;t.isRevealed=true;if(t.bombCount!==0)return;exploreNearbyTiles(findBombs,x,y);}
function revealAdjacent(x,y){if(boardArray[y][x].isFlagged)return;boardArray[y][x].isRevealed=true;}
function countFlags(x,y){var count=0;if(boardArray[y][x].isFlagged){count++;}
return count;}
function cleanTiles(x,y){if(boardArray[y][x].isFlagged)return 0;if(boardArray[y][x].isBomb)return 1;findBombs(x,y);return 0;}
function winGame(){playing=false;paused=true;var board=document.getElementById('gameBoard');var boardBuilder='';var h=boardArray.length;for(var y=0;y<h;y++)
{var w=boardArray[y].length;for(var x=0;x<w;x++)
{var tile=boardArray[y][x];var state=tile.isRevealed?"show"+tile.bombCount:"flag";boardBuilder+='<div class="tile '+state+'" x="'+x+'" y="'+y+'""></div>';}}
document.getElementById("score").innerHTML=score=0;document.getElementById("newGame").style.backgroundPosition="-112px -40px";board.innerHTML=boardBuilder;setTimeout(addScores,500);}
function gameOver(X,Y){playing=false;paused=true;var board=document.getElementById('gameBoard');var boardBuilder='';for(var y=0;y<boardArray.length;y++)
{var row=boardArray[y];for(var x=0;x<row.length;x++)
{var tile=boardArray[y][x];var state="";if(x==X&&y==Y)
state="killer";else if(tile.isRevealed)
state="show"+tile.bombCount;else if(tile.isFlagged&&tile.isBomb)
state="flag";else if(tile.isBomb)
state="bomb";else if(tile.isFlagged)
state="badGuess";boardBuilder+='<div class="tile '+state+'" x="'+x+'" y="'+y+'""></div>';}}
board.innerHTML=boardBuilder;document.getElementById("newGame").style.backgroundPosition="-84px -40px";}
function multiDead(X,Y){exploreNearbyTiles(revealAdjacent,X,Y);playing=false;paused=true;var board=document.getElementById('gameBoard');var boardBuilder='';for(var y=0;y<boardArray.length;y++)
{var row=boardArray[y];for(var x=0;x<row.length;x++)
{var tile=boardArray[y][x];var state="";if((Math.abs(x-X)<=1&&Math.abs(y-Y)<=1)&&boardArray[y][x].isBomb&&!boardArray[y][x].isFlagged){state="killer";}
else if(tile.isRevealed)
state="show"+tile.bombCount;else if(tile.isFlagged&&tile.isBomb)
state="flag";else if(tile.isBomb)
state="bomb";else if(tile.isFlagged)
state="badGuess";boardBuilder+='<div class="tile '+state+'" x="'+x+'" y="'+y+'""></div>';}}
board.innerHTML=boardBuilder;document.getElementById("newGame").style.backgroundPosition="-84px -40px";}
function myTimer(){if(time>=999)
{seconds.innerHTML=time=999;return;}
if(!paused){seconds.innerHTML=++time;}}
function getScores(){$.get("getHighScores.php",function(data){document.getElementById("highScores").innerHTML=data;switch(difficulty){case 0:document.getElementById("diffEasy").style.display="block";document.getElementById("diffMedium").style.display="none";document.getElementById("diffHard").style.display="none";break;case 1:document.getElementById("diffEasy").style.display="none";document.getElementById("diffMedium").style.display="block";document.getElementById("diffHard").style.display="none";break;case 2:document.getElementById("diffEasy").style.display="none";document.getElementById("diffMedium").style.display="none";document.getElementById("diffHard").style.display="block";break;case 3:document.getElementById("diffEasy").style.display="none";document.getElementById("diffMedium").style.display="none";document.getElementById("diffHard").style.display="none";break;}});}
function postScore(name,time,difficulty){$.post("addHighScores.php",{n:name,t:time,d:difficulty});setTimeout(getScores,500);}
function addScores(){var difficulty=0;if(height==9&&width==9&&maxBombs==10){difficulty=0;}
else if(height==16&&width==16&&maxBombs==40){difficulty=1;}
else if(height==16&&width==30&&maxBombs==99){difficulty=2;}
else{return;}
var s=prompt("Congratulations, you finished in "+time+" seconds!\nEnter your name if you wish to be added to the High score table:");if(s!==null){postScore(s,time,difficulty);}}
var gameMenu=[{name:'New Game',title:'Start A New Game',fun:function(){newGame();}},{name:'Easy',title:'Easy Difficulty',fun:function(){height=9;width=9;maxBombs=10;difficulty=0;newGame();}},{name:'Medium',title:'Medium Difficulty',fun:function(){height=16;width=16;maxBombs=40;difficulty=1;newGame();}},{name:'Hard',title:'Hard Difficulty',fun:function(){height=16;width=30;maxBombs=99;difficulty=2;newGame();}},{name:'Custom',title:'Not Yet Implemented',disable:false,fun:function(){$('#custDiff').collapse('show');}}];$('#gameMenu').contextMenu(gameMenu);var helpMenu=[{name:'About',title:'About',fun:function(){}}];$('#helpMenu').contextMenu(helpMenu);